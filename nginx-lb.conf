worker_processes  1;
user root;  
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    lua_need_request_body on;
    #gzip  on; // should not use gzip 
    resolver 127.0.0.11 ipv6=off;     
    log_format graylog2_json escape=json '{ "timestamp": "$time_iso8601", '
                     '"remote_addr": "$remote_addr", '
                     '"body_bytes_sent": $body_bytes_sent, '
                     '"request_time": $request_time, '
                     '"response_status": $status, '
                     '"request": "$request", '
                     '"request_method": "$request_method", '
                     '"host": "$host",'
                     '"request_body":"$request_body",'
                     '"upstream_cache_status": "$upstream_cache_status",'
                     '"upstream_addr": "$upstream_addr",'
                     '"http_x_forwarded_for": "$http_x_forwarded_for",'
                     '"http_referrer": "$http_referer", '
                     '"http_user_agent": "$http_user_agent" }';
    log_format graylog2_json2 escape=json '{ "timestamp": "$time_iso8601", '
                     '"remote_addr": "$remote_addr", '
                     '"body_bytes_sent": $body_bytes_sent, '
                     '"request_time": $request_time, '
                     '"response_status": $status, '
                     '"request": "$request", '
                     '"request_method": "$request_method", '
                     '"host": "$host",'
                     '"request_body":"$request_body",'
                     '"upstream_cache_status": "$upstream_cache_status",'
                     '"upstream_addr": "$upstream_addr",'
                     '"http_x_forwarded_for": "$http_x_forwarded_for",'
                     '"http_referrer": "$http_referer", '
                     '"http_user_agent": "$http_user_agent" }';     
    real_ip_header     X-Forwarded-For;
    real_ip_recursive on;
    server {
        listen       80;
        charset utf-8;
        default_type text/html;
        location /userdemo {
            proxy_pass http://bloom:8080;
            proxy_set_header Bloom-Request-Shard 1;
            proxy_set_header Host $host;
            proxy_read_timeout 10000;
            proxy_send_timeout 10000;
            proxy_buffer_size 1M; 
            proxy_buffers 8 1M; 
            proxy_busy_buffers_size 1M; 
            proxy_temp_file_write_size 1M;
            proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Host $host;
        }
        location ^~ /appdemo {
            proxy_pass http://bloom:8080;
            proxy_set_header Bloom-Request-Shard 2;
            proxy_set_header Host $host;
            proxy_read_timeout 10000;
            proxy_send_timeout 10000;
            proxy_buffer_size 1M; 
            proxy_buffers 8 1M; 
            proxy_busy_buffers_size 1M; 
            proxy_temp_file_write_size 1M;
            proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Host $host;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }
    server {
        listen       8080;
        charset utf-8;
        default_type text/html;
        location /userdemo {
           access_log  /usr/local/openresty/nginx/logs/access_test.log  graylog2_json;
           content_by_lua_block {
               ngx.say("this is a demo")
           }
           header_filter_by_lua_block {
              ngx.header["Bloom-Response-Buckets"] = "user_id:10012"
           } 
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    server {
        listen       8081;
        charset utf-8;
        default_type text/html;
        location /appdemo {
           access_log  /usr/local/openresty/nginx/logs/access_test2.log  graylog2_json2;
           content_by_lua_block {
               ngx.say("appdemo")
           }
           header_filter_by_lua_block {
              ngx.header["Bloom-Response-Buckets"] = "login:10012"
           } 
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}